steps:
  # 1. Checkout: Descarga el código de tu repositorio
  - name: 1. Descargar código
    uses: actions/checkout@v4

  # 2. Configuración de dependencias
  
  # 2a. Configurar Node.js (versión 18 es ideal)
  - name: 2a. Configurar Node.js (requerido por Bubblewrap)
    uses: actions/setup-node@v4
    with:
      node-version: '18'

  # 2b. Configurar Java (versión 17 es ideal)
  - name: 2b. Configurar Java (requerido por el SDK)
    uses: actions/setup-java@v4
    with:
      distribution: 'temurin'
      java-version: '17'
  
  # 2c. Instalar Bubblewrap CLI de forma local (para usar NPX)
  - name: 2c. Instalar Bubblewrap CLI
    # Lo instalaremos de forma local en el proyecto (no -g) para que npx lo encuentre fácilmente.
    run: npm install bubblewrap

  # 3. Configuración del Entorno de Construcción de Android
  # Instala las herramientas necesarias de Android SDK para Bubblewrap
  - name: 3. Configurar Android SDK y Herramientas de Construcción
    uses: android-actions/setup-android@v3
    with:
      api-level: 34
      build-tools: 34.0.0
      cmdline-tools: true 
      
  # 4. Configurar el Keystore
  # Crea el archivo keystore.jks usando la variable de entorno secreta
  - name: 4. Configurar Keystore (.jks)
    run: |
      # El secreto KEYSTORE_BASE64 debe estar configurado en GitHub Secrets
      echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
      
  # 5. Ejecutar Bubblewrap y Generar el TWA (APK/AAB)
  # Usamos NPX, que busca el comando en el node_modules local (instalado en el paso 2c).
  - name: 5. Construir el TWA (Trusted Web Activity)
    run: |
      # Comando para generar el proyecto Android, el APK y el AAB
      npx bubblewrap build --skip-pwa-validation --single-mode
      
  # 6. Subir el artefacto
  - name: 6. Subir Artefactos de Construcción
    uses: actions/upload-artifact@v4
    with:
      name: TWA_Build_ivanramos248-hue
      path: |
        *.aab
        *.apk
      retention-days: 7
